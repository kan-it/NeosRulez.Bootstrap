prototype(Neos.Neos:Page) {
    htmlTag = Neos.Fusion:Tag {
        tagName = 'html'
        omitClosingTag = TRUE
        attributes {
            lang.@if.languageDimensionExists = ${true}
            lang.@if.onlyRenderWhenInLiveWorkspace = ${true}
        }
    }
    head {
        NeosRulezBootstrapMetadata = Neos.Fusion:Component {

            publicResourcePath = ${Configuration.setting('NeosRulez.Bootstrap.fontawesome.publicResourcePath')}
            license = ${Configuration.setting('NeosRulez.Bootstrap.fontawesome.licence') == 'pro' ? 'pro' : 'free'}
            version = ${Configuration.setting('NeosRulez.Bootstrap.fontawesome.version')}

            renderer = afx`
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <Neos.Fusion:Tag tagName="link" attributes.rel="stylesheet" @children="attributes.href" >
                    <Neos.Fusion:ResourceUri path={props.publicResourcePath + '/fontawesome-' + props.license + '-' + props.version + '-web/css/all.css'} />
                </Neos.Fusion:Tag>
            `
        }
        NeosRulezBootstrapBackendCss = Neos.Fusion:Tag {
            @position = 'end'
            @process.1 = ${node.context.workspaceName != 'live' ? value : ''}
            tagName = 'link'
            attributes {
                media = 'all'
                rel = 'stylesheet'
                href = Neos.Fusion:ResourceUri {
                    path = 'resource://NeosRulez.Bootstrap/Public/Styles/Backend/backend.css'
                }
            }
        }
    }
    NeosRulezBootstrapTopAnchorLink = NeosRulez.Bootstrap:Component.TopAnchorLink
    NeosRulezBootstrapBackendJs = Neos.Fusion:Tag {
        @position = 'end'
        @process.1 = ${node.context.workspaceName != 'live' ? value : ''}
        tagName = 'script'
        attributes {
            rel = 'text/javascript'
            src = Neos.Fusion:ResourceUri {
                path = 'resource://NeosRulez.Bootstrap/Public/JavaScript/Backend/backend.js'
            }
        }
    }
    NeosRulezBootstrapAutoModal = Neos.Fusion:Component {
        @position = 'end'
        modals = ${q(documentNode).find('[instanceof NeosRulez.Bootstrap:Content.Modal]').get()}
        keyboard = 'true'

        renderer = afx`
            <Neos.Fusion:Loop items={props.modals} itemKey="modalKey">
                <script @if.render={item.properties.autoOpen} >{"
                    function setModalCookie(name, value, daysToExpire) {
                        let expirationDate = new Date();
                        expirationDate.setDate(expirationDate.getDate() + daysToExpire);
                        let cookieValue = encodeURIComponent(name) + \"=\" + encodeURIComponent(value) + \";expires=\" + expirationDate.toUTCString() + \";path=/\";
                        document.cookie = cookieValue;
                    }
                    function checkModalCookie(name, value) {
                        let cookies = document.cookie.split(';');
                        for(var i = 0; i < cookies.length; i++) {
                            let cookie = cookies[i].trim();
                            if (cookie.indexOf(name + \"=\") === 0) {
                                let cookieValue = cookie.substring(name.length + 1);
                                if (cookieValue === value) {
                                    return true;
                                }
                            }
                        }
                        return false;
                    }
                    if(document.getElementById('modal__" + item.identifier + "')) {
                        let modal" + modalKey + " = new bootstrap.Modal(document.getElementById('modal__" + item.identifier + "'), {
                            keyboard: " + props.keyboard + "
                        });
                        if(!checkModalCookie('modal" + modalKey + "_" + documentNode.identifier + "', '1')) {
                            let modalTimeOut" + modalKey + " = setTimeout(function(){ modal" + modalKey + ".toggle(); }, " + (item.properties.autoOpenTime ? String.toInteger(item.properties.autoOpenTime) : 0) + ");
                        }
                        let showOnce = " + (item.properties.showOnlyOnce ? item.properties.showOnlyOnce : 'false') + ";
                        if(showOnce) {
                            let showOnceLifetime = " + (item.properties.showOnlyOnceLifetime ? item.properties.showOnlyOnceLifetime : 'false') + ";
                            let modalEl" + modalKey + " = document.getElementById('modal__" + item.identifier + "');
                            modalEl" + modalKey + ".addEventListener('hidden.bs.modal', event => {
                                setModalCookie('modal" + modalKey + "_" + documentNode.identifier + "', '1', showOnceLifetime);
                            });
                        }
                    }
                "}</script>
            </Neos.Fusion:Loop>
        `
        @cache {
            mode = 'cached'
            entryIdentifier {
                node = ${node}
                documentNode = ${documentNode}
            }
            entryTags {
                1 = ${Neos.Caching.nodeTypeTag('NeosRulez.Bootstrap:Content.Modal', documentNode)}
            }
        }
    }
}
