prototype(NeosRulez.Bootstrap:Content.Gallery) < prototype(Neos.Neos:ContentComponent) {
    inBackend = ${site.context.inBackend}
    assets = ${node.properties.assets}
    lightbox = ${node.properties.lightbox ? true : false}
    noGutters = ${node.properties.noGutters ? ' g-0' : false}
    lightboxClassName = ${this.lightbox ? 'gallery-row row' + this.noGutters + ' lightbox' : 'gallery-row row' + this.noGutters}
    noCropping = ${node.properties.noCropping}
    columns = ${'col-6 ' + (node.properties.columns == '4' ? 'col-md-3' : node.properties.columns == '3' ? 'col-md-4' : node.properties.columns == '2' ? 'col-md-6' : 'col')}
    galleryId = ${'lightbox__' + node.identifier}

    renderer = afx`
        <NeosRulez.Bootstrap:Component.AbstractContent>
            <code @if.render={!props.assets && props.inBackend} >
                {I18n.translate('NeosRulez.Bootstrap:NodeTypes.Content.Gallery:content.emptyAssetList')}
            </code>
            <div @if.render={props.assets} class={props.lightboxClassName} >
                <Neos.Fusion:Loop items={props.assets} itemName="asset">
                    <div class={props.columns} >
                        <NeosRulez.Bootstrap:Content.Gallery.Item image={asset} lightbox={props.lightbox} noCropping={props.noCropping} galleryId={props.galleryId} />
                    </div>
                </Neos.Fusion:Loop>
            </div>
        </NeosRulez.Bootstrap:Component.AbstractContent>
    `
}

prototype(NeosRulez.Bootstrap:Content.Gallery.Item) < prototype(Neos.Fusion:Component) {
    allowCropping = ${this.noCropping ? false : true}

    renderer = afx`
        <NeosRulez.Bootstrap:Component.ImageTag @if.render={!props.lightbox} image={props.image} width="300" height="300" allowCropping={props.allowCropping} allowUpScaling={true} async="true" />
        <NeosRulez.Bootstrap:Component.ImageTag.Lightbox @if.render={props.lightbox} image={props.image} width="300" height="300" allowCropping={props.allowCropping} allowUpScaling={true} galleryId={props.galleryId} async="true" />
    `
}
