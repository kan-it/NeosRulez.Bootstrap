prototype(Neos.Form.Builder:Form) {
    renderingOptions {
        submitButtonLabel = ${q(node).property('submitLabel')}
    }
}

prototype(Neos.Form.Builder:FormElement.Definition) {
    properties {
        hideLabels = ${q(node).property('hideLabels')}
    }
}

prototype(Neos.NodeTypes.Navigation:Navigation) < prototype(Neos.Neos:ContentComponent) {

    navigation = Neos.Neos:Menu {
        templatePath = 'resource://Neos.NodeTypes.Navigation/Private/Templates/NodeTypes/Navigation.html'

        startingPoint = ${q(node).property('startingPoint') ? q(node).property('startingPoint') : documentNode}

        itemCollection = ${Array.isEmpty(q(node).property('selection') ? q(node).property('selection') : {}) ? null : q(node).property('selection')}

        entryLevel = ${q(node).property('startLevel')}
        entryLevel.@process.1 = ${String.toInteger(value)}

        maximumLevels = ${q(node).property('maximumLevels')}
        maximumLevels.@process.1 = ${String.toInteger(value)}

        attributes.class.@process < prototype(Neos.Neos:Content).attributes.class.@process

        active.attributes = Neos.Fusion:Attributes {
            class = 'active'
        }
        current.attributes = Neos.Fusion:Attributes {
            class = 'current'
        }
        normal.attributes = Neos.Fusion:Attributes {
            class = 'normal'
        }

        node = ${node}

        @process.contentElementWrapping = Neos.Neos:ContentElementWrapping

        @cache {
            mode = 'cached'
            entryIdentifier {
                documentNode = ${documentNode}
                node = ${node}
            }
            entryTags {
                1 = ${Neos.Caching.nodeTypeTag('Neos.Neos:Document', node)}
                2 = ${Neos.Caching.nodeTag(node)}
            }
        }
    }

    renderer = afx`
        <NeosRulez.Bootstrap:Content.AbstractContent>
            {props.navigation}
        </NeosRulez.Bootstrap:Content.AbstractContent>
    `
}