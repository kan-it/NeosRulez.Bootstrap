prototype(Neos.NodeTypes.Navigation:Navigation) < prototype(Neos.Neos:ContentComponent) {

    navigation = Neos.Fusion:Component {
        entryLevel = ${this.startingPoint ? 0 : 1}
        maximumLevels = 2
        startingPoint = null
        lastLevel = null
        filter = 'Neos.Neos:Document'
        renderHiddenInIndex = ${node.properties.showHidden}
        itemCollection = null

        startingPoint = ${q(node).property('startingPoint') ? q(node).property('startingPoint') : documentNode}

        itemCollection = ${Array.isEmpty(q(node).property('selection') ? q(node).property('selection') : {}) ? null : q(node).property('selection')}

        entryLevel = ${q(node).property('startLevel')}
        entryLevel.@process.1 = ${String.toInteger(value)}

        maximumLevels = ${q(node).property('maximumLevels')}
        maximumLevels.@process.1 = ${String.toInteger(value)}

        attributes.class.@process < prototype(Neos.Neos:Content).attributes.class.@process

        node = ${node}

        attributes = Neos.Fusion:Attributes

        active.attributes = Neos.Fusion:Attributes {
            class = 'active'
        }
        current.attributes = Neos.Fusion:Attributes {
            class = 'current'
        }
        normal.attributes = Neos.Fusion:Attributes {
            class = 'normal'
        }

        @context {
            entryLevel = ${this.entryLevel}
            maximumLevels = ${this.maximumLevels}
            startingPoint = ${this.startingPoint}
            lastLevel = ${this.lastLevel}
            filter = ${this.filter}
            renderHiddenInIndex = ${this.renderHiddenInIndex}
            itemCollection = ${this.itemCollection}
        }

        items = Neos.Neos:MenuItems {
            entryLevel = ${entryLevel}
            maximumLevels = ${maximumLevels}
            startingPoint = ${startingPoint}
            lastLevel = ${lastLevel}
            filter = ${filter}
            renderHiddenInIndex = ${renderHiddenInIndex}
            itemCollection = ${itemCollection}
        }

        @exceptionHandler = 'Neos\\Fusion\\Core\\ExceptionHandlers\\ContextDependentHandler'

        @cache {
            mode = 'cached'
            entryIdentifier {
                node = ${node}
                documentNode = ${documentNode}
            }
            entryTags {
                1 = ${Neos.Caching.nodeTypeTag('Neos.Neos:Document', node)}
                2 = ${Neos.Caching.nodeTag(node)}
            }
        }

        renderer = afx`
            <ul class="nav flex-column">
                <Neos.Fusion:Loop items={props.items} itemName="item">
                    <Neos.NodeTypes.Navigation:Navigation.NavItem />
                </Neos.Fusion:Loop>
            </ul>
        `
    }

    renderer = afx`
        <NeosRulez.Bootstrap:Component.AbstractContent>
            {props.navigation}
        </NeosRulez.Bootstrap:Component.AbstractContent>
    `
}

prototype(Neos.NodeTypes.Navigation:Navigation.NavItem) < prototype(Neos.Fusion:Component) {

    nodeType = ${item.node.nodetype.name}
    linkTarget = ${this.nodeType == 'Neos.Neos:Shortcut' && item.node.properties.linktarget ? '_blank' : false}

    link = ${item.node.properties.target ? item.node.properties.target : 'node://' + item.node.identifier}
    link.@process.convertUris = Neos.Neos:ConvertUris {
        forceConversion = true
    }

    renderer = afx`
        <li class="nav-item">
            <Neos.Fusion:Tag tagName="a" attributes.href={props.link} attributes.class="nav-link" attributes.target={props.linkTarget} attributes.aria-current="page" >
                {item.node.properties.title}
            </Neos.Fusion:Tag>
            <Neos.NodeTypes.Navigation:Navigation.SubItems @if.render={item.subItems} items={item.subItems} />
        </li>
    `
}

prototype(Neos.NodeTypes.Navigation:Navigation.SubItems) < prototype(Neos.Fusion:Component) {

    renderer = afx`
        <ul class="nav subitems flex-column">
            <Neos.Fusion:Loop items={props.items} itemName="item">
                <Neos.NodeTypes.Navigation:Navigation.NavItem />
            </Neos.Fusion:Loop>
        </ul>
    `
}
